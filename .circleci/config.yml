version: 2
jobs:
  build:
    working_directory: ~/myapp
    docker:
      - image: circleci/ruby:2.3-node
        environment:
          PGHOST: 127.0.0.1
          PGUSER: slackapp
          RAILS_ENV: test
      - image: circleci/postgres:9.5-alpine
        environment:
          POSTGRES_USER: slackapp
          POSTGRES_DB: slackapp_test
          POSTGRES_PASSWORD: ""

    steps:
      - checkout

      - restore_cache:
          name: Restore bundle cache
          keys:
            - myapp-bundle-{{ checksum "Gemfile.lock" }}
            - myapp-bundle-

      - run:
          name: Prepare circleci files
          command: cp scripts/circleci/database.yml config/database.yml && cp scripts/circleci/application.rb config/application.rb

      - run:
          name: Bundle Install
          command: bin/bundle check --path vendor/bundle ||  bin/bundle install --path vendor/bundle --jobs 4 --retry 3

      - save_cache:
          name: Store bundle cache
          key: myapp-bundle-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Database setup
          command: bin/bundle exec rake db:schema:load

      - run:
          name: Run rspec
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"

            bundle exec rspec --format progress \
                            --format RspecJunitFormatter \
                            --out /tmp/test-results/rspec.xml \
                            --format progress \
                            "${TEST_FILES}"

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
